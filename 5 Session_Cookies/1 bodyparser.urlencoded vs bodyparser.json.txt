In the context of `body-parser` middleware in Express.js, the `urlencoded` and `json` methods are used to parse different types of data from the incoming request body.

1. **`urlencoded` Method:**
   - **Purpose:** This method is used to parse data encoded in the URL-encoded format.
   - **Format:** URL-encoded data is sent as key-value pairs separated by "&" symbols, and keys and values are URL-encoded.
   - **MIME Type:** "application/x-www-form-urlencoded"
   - **Usage:**
     ```javascript
     app.use(bodyParser.urlencoded({ extended: true }));
     ```
   - **Example:**
     If you have a form with fields like `name` and `age`, when submitted, the data might look like `name=John&age=25`. The `body-parser` middleware with `urlencoded` would parse this into `{ name: 'John', age: '25' }`.

2. **`json` Method:**
   - **Purpose:** This method is used to parse data in JSON format.
   - **Format:** JSON data is typically sent as a JSON object in the request body.
   - **MIME Type:** "application/json"
   - **Usage:**
     ```javascript
     app.use(bodyParser.json());
     ```
   - **Example:**
     If you have a client sending data as JSON: `{ "name": "John", "age": 25 }`, the `body-parser` middleware with `json` would parse this into `{ name: 'John', age: 25 }`.

In modern versions of Express (4.16.0 and later), it's recommended to use the `express.urlencoded()` and `express.json()` methods instead of `body-parser`. These methods are bundled with Express itself and provide the same functionality:

```javascript
app.use(express.urlencoded({ extended: true }));
app.use(express.json());
```

These methods make it easier to handle different types of incoming data in a more consistent and integrated manner.